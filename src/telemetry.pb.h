/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_TELEMETRY_PB_H_INCLUDED
#define PB_TELEMETRY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _UAVTelemetry {
    float roll;
    float pitch;
    float yaw;
    float compass;
    int32_t gps_sat;
    int32_t esc1;
    int32_t esc2;
    int32_t esc3;
    int32_t esc4;
    float lat;
    float lon;
    float height;
    float speed;
    float airspeed;
    int32_t preflight_check;
    int32_t modestatus;
    int32_t armstatus;
    int32_t altholdstatus;
    int32_t possholdstatus;
    float gainroll;
    float gainpitch;
    float gainyaw;
    float gainrollvel;
    float gainpitchvel;
    float gainyawvel;
    float gainlatitude;
    float gainlatitudevel;
    float gainlongitude;
    float gainlongitudevel;
    float gainalthold;
    float gainaltholdvel;
    int32_t remthrottle;
    float remyaw;
    float rempitch;
    float remroll;
    float batteryvolt;
    int32_t battery;
    float trimroll;
    float trimpitch;
    float yawtrim;
} UAVTelemetry;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define UAVTelemetry_init_default                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define UAVTelemetry_init_zero                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define UAVTelemetry_roll_tag                    1
#define UAVTelemetry_pitch_tag                   2
#define UAVTelemetry_yaw_tag                     3
#define UAVTelemetry_compass_tag                 4
#define UAVTelemetry_gps_sat_tag                 5
#define UAVTelemetry_esc1_tag                    6
#define UAVTelemetry_esc2_tag                    7
#define UAVTelemetry_esc3_tag                    8
#define UAVTelemetry_esc4_tag                    9
#define UAVTelemetry_lat_tag                     10
#define UAVTelemetry_lon_tag                     11
#define UAVTelemetry_height_tag                  12
#define UAVTelemetry_speed_tag                   13
#define UAVTelemetry_airspeed_tag                14
#define UAVTelemetry_preflight_check_tag         15
#define UAVTelemetry_modestatus_tag              16
#define UAVTelemetry_armstatus_tag               17
#define UAVTelemetry_altholdstatus_tag           18
#define UAVTelemetry_possholdstatus_tag          19
#define UAVTelemetry_gainroll_tag                20
#define UAVTelemetry_gainpitch_tag               21
#define UAVTelemetry_gainyaw_tag                 22
#define UAVTelemetry_gainrollvel_tag             23
#define UAVTelemetry_gainpitchvel_tag            24
#define UAVTelemetry_gainyawvel_tag              25
#define UAVTelemetry_gainlatitude_tag            26
#define UAVTelemetry_gainlatitudevel_tag         27
#define UAVTelemetry_gainlongitude_tag           28
#define UAVTelemetry_gainlongitudevel_tag        29
#define UAVTelemetry_gainalthold_tag             30
#define UAVTelemetry_gainaltholdvel_tag          31
#define UAVTelemetry_remthrottle_tag             32
#define UAVTelemetry_remyaw_tag                  33
#define UAVTelemetry_rempitch_tag                34
#define UAVTelemetry_remroll_tag                 35
#define UAVTelemetry_batteryvolt_tag             36
#define UAVTelemetry_battery_tag                 37
#define UAVTelemetry_trimroll_tag                38
#define UAVTelemetry_trimpitch_tag               39
#define UAVTelemetry_yawtrim_tag                 40

/* Struct field encoding specification for nanopb */
#define UAVTelemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    roll,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    pitch,             2) \
X(a, STATIC,   SINGULAR, FLOAT,    yaw,               3) \
X(a, STATIC,   SINGULAR, FLOAT,    compass,           4) \
X(a, STATIC,   SINGULAR, INT32,    gps_sat,           5) \
X(a, STATIC,   SINGULAR, INT32,    esc1,              6) \
X(a, STATIC,   SINGULAR, INT32,    esc2,              7) \
X(a, STATIC,   SINGULAR, INT32,    esc3,              8) \
X(a, STATIC,   SINGULAR, INT32,    esc4,              9) \
X(a, STATIC,   SINGULAR, FLOAT,    lat,              10) \
X(a, STATIC,   SINGULAR, FLOAT,    lon,              11) \
X(a, STATIC,   SINGULAR, FLOAT,    height,           12) \
X(a, STATIC,   SINGULAR, FLOAT,    speed,            13) \
X(a, STATIC,   SINGULAR, FLOAT,    airspeed,         14) \
X(a, STATIC,   SINGULAR, INT32,    preflight_check,  15) \
X(a, STATIC,   SINGULAR, INT32,    modestatus,       16) \
X(a, STATIC,   SINGULAR, INT32,    armstatus,        17) \
X(a, STATIC,   SINGULAR, INT32,    altholdstatus,    18) \
X(a, STATIC,   SINGULAR, INT32,    possholdstatus,   19) \
X(a, STATIC,   SINGULAR, FLOAT,    gainroll,         20) \
X(a, STATIC,   SINGULAR, FLOAT,    gainpitch,        21) \
X(a, STATIC,   SINGULAR, FLOAT,    gainyaw,          22) \
X(a, STATIC,   SINGULAR, FLOAT,    gainrollvel,      23) \
X(a, STATIC,   SINGULAR, FLOAT,    gainpitchvel,     24) \
X(a, STATIC,   SINGULAR, FLOAT,    gainyawvel,       25) \
X(a, STATIC,   SINGULAR, FLOAT,    gainlatitude,     26) \
X(a, STATIC,   SINGULAR, FLOAT,    gainlatitudevel,  27) \
X(a, STATIC,   SINGULAR, FLOAT,    gainlongitude,    28) \
X(a, STATIC,   SINGULAR, FLOAT,    gainlongitudevel,  29) \
X(a, STATIC,   SINGULAR, FLOAT,    gainalthold,      30) \
X(a, STATIC,   SINGULAR, FLOAT,    gainaltholdvel,   31) \
X(a, STATIC,   SINGULAR, INT32,    remthrottle,      32) \
X(a, STATIC,   SINGULAR, FLOAT,    remyaw,           33) \
X(a, STATIC,   SINGULAR, FLOAT,    rempitch,         34) \
X(a, STATIC,   SINGULAR, FLOAT,    remroll,          35) \
X(a, STATIC,   SINGULAR, FLOAT,    batteryvolt,      36) \
X(a, STATIC,   SINGULAR, INT32,    battery,          37) \
X(a, STATIC,   SINGULAR, FLOAT,    trimroll,         38) \
X(a, STATIC,   SINGULAR, FLOAT,    trimpitch,        39) \
X(a, STATIC,   SINGULAR, FLOAT,    yawtrim,          40)
#define UAVTelemetry_CALLBACK NULL
#define UAVTelemetry_DEFAULT NULL

extern const pb_msgdesc_t UAVTelemetry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define UAVTelemetry_fields &UAVTelemetry_msg

/* Maximum encoded size of messages (where known) */
#define TELEMETRY_PB_H_MAX_SIZE                  UAVTelemetry_size
#define UAVTelemetry_size                        297

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
